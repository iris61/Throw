{"version":3,"sources":["ConfigUtil.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/script/Utils","sourcesContent":["import { Constants } from \"../Constants\";\nimport StorageUtils from \"./StorageUtils\";\n\nconst CONFIG_FILE_NAME = \"config\";\nconst PREFIX_KNIFE_ID = \"knife\";\nconst PREFIX_STAGE_ID = \"stage\";\nconst PREFIX_BOSS_STAGE_ID = \"stageboss\";\n\nexport const enum KnifeObtainMethod{\n    BUY = 1,\n    REWARD_ADS = 2,\n    DEFEAT_BOSS = 3\n}\n\ninterface Position {\n    reference: string,\n    position: number\n}\n\ninterface Rotation {\n    targetSpeed: number,\n    interpolator: string,\n    interval: number\n}\n\nexport default class ConfigUtil {\n    private static sharedInstance: ConfigUtil;\n\n    private configJson: any = null;\n\n    public static get shared(): ConfigUtil {\n        if (!this.sharedInstance) {\n            this.sharedInstance = new ConfigUtil();\n        }\n        return this.sharedInstance;\n    }\n\n    private constructor() {\n        // @ts-ignore\n        window.ConfigUtil = ConfigUtil;\n    }\n\n    public init(callback): void {\n        cc.loader.loadRes(CONFIG_FILE_NAME, cc.JsonAsset, (error: Error, resource: cc.JsonAsset) => {\n            if (error) {\n                cc.log(error);\n            } else {\n                this.configJson = resource;\n                callback();\n            }\n        });\n    }\n\n    public getBossName(stageBoss: number): string {\n        return this.configJson.json.stages[PREFIX_BOSS_STAGE_ID + stageBoss].boss;\n    }\n\n    public getBossRewardKnife(stageBoss: number): string {\n        return this.configJson.json.stages[PREFIX_BOSS_STAGE_ID + stageBoss].reward;\n    }\n\n    public getBossHitAudioResourceUrl(stageBoss: number): string {\n        return this.configJson.json.stages[PREFIX_BOSS_STAGE_ID + stageBoss].knifeInsertedAudio;\n    }\n\n    public getPlayStageUserKnifesCount(stageId: string): number {\n        return this.configJson.json.stages[stageId].knifes.count;\n    }\n\n    public getStageIdByIndex(stage: number, stageboss: number): string {\n        return  stage % Constants.INTERVAL_BOSS_STAGE == 0 ? PREFIX_BOSS_STAGE_ID + stageboss : PREFIX_STAGE_ID + stage;\n    }\n\n    public getKnifeId(index: number): string {\n        return PREFIX_KNIFE_ID + index;\n    }\n\n    public getIndexFromKnifeId(knifeId: string): number {\n        return Number(knifeId.substr(PREFIX_KNIFE_ID.length));\n    }\n\n    public getIndexFromAdResult(result: string): number {\n        return Number(result.substr(Constants.WATCH_AD_FOR_KNIFE.length));\n    }\n\n    public getKnifeResourceUrl(knifeId: string): string {\n        return this.configJson.json.knifes[knifeId].resource;\n    }\n\n    public getKnifeInsertLength(knifeId: string): number {\n        return this.configJson.json.knifes[knifeId].insertLength;\n    }\n\n    public getKnifeLength(knifeId: string): number {\n        return this.configJson.json.knifes[knifeId].length;\n    }\n\n    public getKnifeObtainMethod(knifeId: string): KnifeObtainMethod {\n        return this.configJson.json.knifes[knifeId].obtaining;\n    }\n\n    public getKnifePrice(knifeId: string): number {\n        return this.configJson.json.knifes[knifeId].price;\n    }\n\n    public getPresetKnifesArray(stageId: string): Position[]{\n        return this.configJson.json.stages[stageId].knifes.origin.items;\n    }\n\n    public getPresetKnifePositionAngle(stageId: string, presetKnifeIndex: number): number{\n        return this.configJson.json.stages[stageId].knifes.origin.items[presetKnifeIndex].position;\n    }\n\n    public getPresetKnifeId(stageId: string, presetKnifeIndex: number): string{\n        return this.configJson.json.stages[stageId].knifes.origin.items[presetKnifeIndex].reference;\n    }\n\n    public getPresetApplesArray(stageId: string): Position[]{\n        return this.configJson.json.stages[stageId].apples.items;\n    }\n\n    public getPresetAppleId(stageId: string, presetAppleIndex: number): string{\n        return this.configJson.json.stages[stageId].apples.items[presetAppleIndex].reference;\n    }\n\n    public getAppleResourceUrl(appleId: string): string {\n        return this.configJson.json.apples[appleId].resource;\n    }\n\n    public getPresetApplePositionAngle(stageId: string, presetAppleIndex: number): number{\n        return this.configJson.json.stages[stageId].apples.items[presetAppleIndex].position;\n    }\n\n    public getBoardId(stageId: string): string {\n        return this.configJson.json.stages[stageId].board.reference;\n    }\n\n    public getBoardResourceUrl(boardId: string): string {\n        return this.configJson.json.boards[boardId].resource;\n    }\n\n    public getBoardRotation(stageId: string): Rotation[] {\n        return this.configJson.json.stages[stageId].board.rotation;\n    }\n\n    public getAllKnifesCount(): number {\n        let count = 0;\n        for (let knifeId in this.configJson.json.knifes) {\n            count++;\n        }\n        return count;\n    }\n\n    public getBossNameForKnife(knifeId: string): string {\n        for (let i = 1; i <= Constants.COUNT_TOTAL_BOSS_STAGE; i++) {\n            if (this.configJson.json.stages[PREFIX_BOSS_STAGE_ID + i].reward == knifeId) {\n                return this.configJson.json.stages[PREFIX_BOSS_STAGE_ID + i].boss;\n            }\n        }\n\n        return \"\";\n    }\n\n    public hasKnife(knifeId: string): boolean {\n        return this.configJson.json.knifes[knifeId] != null;\n    }\n\n    public hasLotteryKnife(): boolean {\n        let gainedKnifes: Array<string> = StorageUtils.shared.getString(Constants.KEY_USER_GAINED_KNIFES, Constants.DEFAULT_USER_KNIFE_ID).split(\",\");\n\n        for (let index = 1; this.hasKnife(ConfigUtil.shared.getKnifeId(index)); index++) {\n            if (ConfigUtil.shared.getKnifeObtainMethod(ConfigUtil.shared.getKnifeId(index)) != KnifeObtainMethod.DEFEAT_BOSS\n                    && -1 == gainedKnifes.indexOf(ConfigUtil.shared.getKnifeId(index))) {\n                return true;\n            }            \n        }\n\n        return false;\n    }\n}"]}
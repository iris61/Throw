{"version":3,"sources":["../../../../../../assets/script/modules/play/assets/script/modules/play/BoardPartsControlComponent.ts"],"names":[],"mappings":";;;;;AAAA,oFAA8F;AAExF,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAG5C;IAAwD,8CAAY;IADpE;QAAA,qEA4BC;QAxBW,oBAAc,GAAY,IAAI,CAAC;QAG/B,qBAAe,GAAY,IAAI,CAAC;QAGhC,oBAAc,GAAY,IAAI,CAAC;QAG/B,qBAAe,GAAY,IAAI,CAAC;;IAe5C,CAAC;IAbG,2CAAM,GAAN;QACI,EAAE,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;IAChD,CAAC;IAED,0CAAK,GAAL;IACA,CAAC;IAEM,0CAAK,GAAZ;QACI,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,iCAAuB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,mCAAS,CAAC,KAAK,CAAC,CAAC;QACrG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,iCAAuB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,mCAAS,CAAC,IAAI,CAAC,CAAC;QAC1G,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,iCAAuB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,mCAAS,CAAC,IAAI,CAAC,CAAC;QAC1G,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,iCAAuB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,mCAAS,CAAC,IAAI,CAAC,CAAC;IAC/G,CAAC;IAvBD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;sEACqB;IAGvC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;uEACsB;IAGxC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;sEACqB;IAGvC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;uEACsB;IAZvB,0BAA0B;QAD9C,OAAO;OACa,0BAA0B,CA2B9C;IAAD,iCAAC;CA3BD,AA2BC,CA3BuD,EAAE,CAAC,SAAS,GA2BnE;kBA3BoB,0BAA0B","file":"","sourceRoot":"../../../../../../assets/script/modules/play","sourcesContent":["import FallingControlComponent, { Direction } from \"../../components/FallingControlComponent\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class BoardPartsControlComponent extends cc.Component {\n\n    @property(cc.Node)\n    private firstBoardNode: cc.Node = null;\n\n    @property(cc.Node)\n    private secondBoardNode: cc.Node = null;\n\n    @property(cc.Node)\n    private thirdBoardNode: cc.Node = null;\n\n    @property(cc.Node)\n    private fourthBoardNode: cc.Node = null;\n\n    onLoad() {\n        cc.log(\"BoardPartsControlComponent onLoad\");\n    }\n\n    start() {\n    }\n\n    public split(): void {\n        this.firstBoardNode.getComponent(FallingControlComponent).split(Math.random() * 60, Direction.RIGHT);\n        this.secondBoardNode.getComponent(FallingControlComponent).split(Math.random() * 60 + 60, Direction.LEFT);\n        this.thirdBoardNode.getComponent(FallingControlComponent).split(Math.random() * 60 + 150, Direction.LEFT);\n        this.fourthBoardNode.getComponent(FallingControlComponent).split(Math.random() * 60 + 210, Direction.LEFT);\n    }\n}\n"]}
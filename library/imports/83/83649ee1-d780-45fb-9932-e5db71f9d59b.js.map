{"version":3,"sources":["../../../../../../assets/script/modules/settings/assets/script/modules/settings/SwitchControlComponent.ts"],"names":[],"mappings":";;;;;AAAA,yDAAoD;AAE9C,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAG5C;IAAoD,0CAAY;IADhE;QAAA,qEAqCC;QAlCW,aAAO,GAAY,KAAK,CAAC;;IAkCrC,CAAC;IA9BG,uCAAM,GAAN;QAAA,iBASC;QARG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAEhD,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,UAAC,KAAe;YACtD,KAAI,CAAC,OAAO,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC;YAE7B,KAAI,CAAC,yBAAyB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;YAC7C,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,qCAAI,GAAX,UAAY,OAAgB;QACxB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAEM,6DAA4B,GAAnC,UAAoC,yBAAqD;QACrF,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;IAC/D,CAAC;IAEO,kDAAiB,GAAzB,UAA0B,IAAa,EAAE,KAAc;QACnD,IAAI,KAAK,EAAE;YACP,sBAAY,CAAC,aAAa,CAAC,8BAA8B,EAAE,UAAC,KAAY,EAAE,QAAwB;gBAC9F,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC;YACxD,CAAC,CAAC,CAAC;SACN;aAAM;YACH,sBAAY,CAAC,aAAa,CAAC,+BAA+B,EAAE,UAAC,KAAY,EAAE,QAAwB;gBAC/F,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC;YACxD,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAnCgB,sBAAsB;QAD1C,OAAO;OACa,sBAAsB,CAoC1C;IAAD,6BAAC;CApCD,AAoCC,CApCmD,EAAE,CAAC,SAAS,GAoC/D;kBApCoB,sBAAsB","file":"","sourceRoot":"../../../../../../assets/script/modules/settings","sourcesContent":["import ResourceUtil from \"../../utils/ResourceUtil\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class SwitchControlComponent extends cc.Component {\n\n    private checked: boolean = false;\n\n    private switchStateChangeCallback: (checked: boolean) => void;\n\n    onLoad() {\n        this.updateSwitchState(this.node, this.checked);\n\n        this.node.on(cc.Node.EventType.TOUCH_END, (event: cc.Event) => {\n            this.checked = !this.checked;\n\n            this.switchStateChangeCallback(this.checked);\n            this.updateSwitchState(this.node, this.checked);\n        });\n    }\n\n    public init(checked: boolean): void {\n        this.checked = checked;\n    }\n\n    public setSwitchStateChangeCallback(switchStateChangeCallback: (checked: boolean) => void): void {\n        this.switchStateChangeCallback = switchStateChangeCallback;\n    }\n\n    private updateSwitchState(node: cc.Node, state: boolean): void {\n        if (state) {\n            ResourceUtil.loadSpriteRes(\"./settings/setting_switch_on\", (error: Error, resource: cc.SpriteFrame) => {\n                node.getComponent(cc.Sprite).spriteFrame = resource;\n            });\n        } else {\n            ResourceUtil.loadSpriteRes(\"./settings/setting_switch_off\", (error: Error, resource: cc.SpriteFrame) => {\n                node.getComponent(cc.Sprite).spriteFrame = resource;\n            });\n        }\n    }\n}\n"]}
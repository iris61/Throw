{"version":3,"sources":["../../../../../assets/script/Utils/assets/script/Utils/ResourceUtil.ts"],"names":[],"mappings":";;;;;AAAA;IAAA;IAkFA,CAAC;IAhFG,aAAa;IACN,0BAAa,GAApB,UAAsB,GAAG,EAAE,UAAU;QACjC,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,EAAE;YACN,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;SACtD;aAAM;YACH,IAAI,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YACvC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC5B,UAAU,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;SACjC;IACL,CAAC;IAAA,CAAC;IAEF,mCAAmC;IACnC,6DAA6D;IACtD,2CAA8B,GAArC,UAAsC,IAAI,EAAE,UAAU;QAClD,YAAY,CAAC,mBAAmB,CAAC,IAAI,EAAE,UAAC,GAAG,EAAE,GAAG;YAC5C,IAAI,GAAG,EAAE;gBACL,IAAM,IAAI,GAAG,GAAG,CAAC,cAAc,EAAE,CAAA;gBACjC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;aACpF;iBAAM;gBACH,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;aACvB;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IAEM,qCAAwB,GAA/B,UAAiC,IAAI;QACjC,OAAO,2BAA2B,GAAG,IAAI,CAAA;IAC7C,CAAC;IAEM,gCAAmB,GAA1B,UAA2B,IAAI,EAAE,UAAU,EAAE,MAAa;QAAb,uBAAA,EAAA,aAAa;QACtD,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,IAAI,YAAY,KAAK,EAAE;YACvB,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;YACtB,OAAM;SACT;QACD,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAC,GAAG;YAC/B,IAAI,GAAG,YAAY,EAAE,CAAC,SAAS,EAAE;gBAC7B,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;aACxB;iBAAM;gBACH,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;aACxB;QACL,CAAC,EAAE,MAAM,CAAC,CAAA;IACd,CAAC;IAEM,4BAAe,GAAtB,UAAuB,IAAI;QACvB,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACxB,IAAI,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE;gBACjB,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC;oBAC1C,GAAG,CAAC,SAAS,CAAC,mBAAmB,CAAC,YAAY,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAA;gBAClF,IAAI,CAAC,IAAI,EAAE;oBACP,EAAE,CAAC,GAAG,CAAC,qCAAqC,GAAG,KAAK,CAAC,CAAC;oBACtD,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;iBACtB;aACJ;iBAAM;gBACH,IAAI,GAAG,YAAY,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;aACtD;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,6BAAgB,GAAvB,UAAwB,GAAG,EAAE,UAAU;QACnC,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,EAAE;YACN,aAAa;YACb,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;SACpD;aAAM;YACH,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SACzB;IACL,CAAC;IAAA,CAAC;IAEK,0BAAa,GAApB,UAAqB,IAAI,EAAE,UAAU;QACjC,IAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QAClC,IAAI,GAAG,EAAE;YACL,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;SACxB;aAAM;YACH,YAAY;YACZ,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC,CAAA;SACpD;IACL,CAAC;IACL,mBAAC;AAAD,CAlFA,AAkFC,IAAA","file":"","sourceRoot":"../../../../../assets/script/Utils","sourcesContent":["export default class ResourceUtil {\n\n    //todo 符合rule\n    static loadSpriteRes (url, completion) {\n        var res = cc.loader.getRes(url);\n        if (!res) {\n            cc.loader.loadRes(url, cc.SpriteFrame, completion);\n        } else {\n            var spriteFrame = new cc.SpriteFrame();\n            spriteFrame.setTexture(res);\n            completion(null, spriteFrame);\n        }\n    };\n\n    /// 载入路径指定的Texture并生成对应的SpriteFrame\n    /// - Parameter path: 图片文件相对路径，需存在于cocos的search path中，需带有扩展名。\n    static loadSpriteFrameWithTexturePath(path, completion) {\n        ResourceUtil.loadTextureWithPath(path, (err, tex) => {\n            if (tex) {\n                const size = tex.getContentSize()\n                completion(null, new cc.SpriteFrame(tex, cc.rect(0, 0, size.width, size.height)))\n            } else {\n                completion(err, tex)\n            }\n        })\n    }\n\n    static resourcesFilePathForName (name) {\n        return \"res/raw-assets/resources/\" + name\n    }\n\n    static loadTextureWithPath(path, completion, target = null) {\n        path = this.getAbsolutePath(path);\n        if (path instanceof Error) {\n            completion(path, null)\n            return\n        }\n        cc.textureCache.addImage(path, (tex) => {\n            if (tex instanceof cc.Texture2D) {\n                completion(null, tex)\n            } else {\n                completion(tex, null)\n            }\n        }, target)\n    }\n\n    static getAbsolutePath(path){\n        let value = path;\n        if (path.indexOf(\"/\") != 0) {\n            if (cc.sys.isNative) {\n                path = jsb.fileUtils.fullPathForFilename(path) ||\n                    jsb.fileUtils.fullPathForFilename(ResourceUtil.resourcesFilePathForName(path))\n                if (!path) {\n                    cc.log(\"get Absolute Path : File Not Found \" + value);\n                    path = new Error();\n                }\n            } else {\n                path = ResourceUtil.resourcesFilePathForName(path);\n            }\n        }\n        return path;\n    }\n\n    static loadTexture2DRes(url, completion) {\n        var res = cc.loader.getRes(url);\n        if (!res) {\n            // @ts-ignore\n            cc.loader.loadRes(url, cc.Texture2D, completion);\n        } else {\n            completion(null, res);\n        }\n    };\n\n    static loadAudioClip(path, completion) {\n        const res = cc.loader.getRes(path)\n        if (res) {\n            completion(null, res)\n        } else {\n            //@ts-ignore\n            cc.loader.loadRes(path, cc.AudioClip, completion)\n        }\n    }\n}"]}
{"version":3,"sources":["../../../../../../assets/script/modules/warehouse/assets/script/modules/warehouse/LotteryComponent.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../../assets/script/modules/warehouse","sourcesContent":["import ResourceUtil from \"../../utils/ResourceUtil\";\nimport StorageUtils from \"../../utils/StorageUtils\";\nimport { Constants } from \"../../Constants\";\nimport { COUNT_KNIFES_ONE_PAGE } from \"./KnifeWarehousePageViewComponent\";\nimport ConfigUtil, { KnifeObtainMethod } from \"../../utils/ConfigUtil\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LotteryComponent extends cc.Component {\n\n    @property(cc.PageView)\n    pageView: cc.PageView = null;\n\n    @property(cc.Prefab)\n    page: cc.Prefab = null;\n\n    private notGainedKnifes: Array<number> = new Array<number>();\n    private pageViewIndexs: Array<number> = new Array<number>();\n\n    private selectPage: cc.Node = null;\n\n    private hasStartedScroll: boolean = false;\n    private randomNumber: number = 0;\n\n    private lotteryCallback: () => void = null;\n\n    onLoad() {\n        let gainedKnifes: Array<string> = StorageUtils.shared.getString(Constants.KEY_USER_GAINED_KNIFES, Constants.DEFAULT_USER_KNIFE_ID).split(\",\");\n\n        let createPage = (index: number): void => {\n            let node = cc.instantiate(this.page);\n\n            let spriteComponent: cc.Sprite = node.getComponent(cc.Sprite);\n            ResourceUtil.loadSpriteRes(ConfigUtil.shared.getKnifeResourceUrl(ConfigUtil.shared.getKnifeId(index)), (error: Error, resource: cc.SpriteFrame) => {\n                spriteComponent.spriteFrame = resource;\n            });\n\n            this.pageView.addPage(node);\n        };\n\n        for (let index = 1, count = 1; ConfigUtil.shared.hasKnife(ConfigUtil.shared.getKnifeId(index)) && count <= ((COUNT_KNIFES_ONE_PAGE - 1) / 2); index++) {\n            if (ConfigUtil.shared.getKnifeObtainMethod(ConfigUtil.shared.getKnifeId(index)) == KnifeObtainMethod.DEFEAT_BOSS) {\n                continue;\n            }\n\n            createPage(index);\n            count++;\n        }\n\n        for (let index = 1, pageViewIndex = 0; ConfigUtil.shared.hasKnife(ConfigUtil.shared.getKnifeId(index)); index++) {\n            if (ConfigUtil.shared.getKnifeObtainMethod(ConfigUtil.shared.getKnifeId(index)) == KnifeObtainMethod.DEFEAT_BOSS) {\n                continue;\n            }\n\n            if (gainedKnifes.indexOf(ConfigUtil.shared.getKnifeId(index)) == -1) {\n                this.notGainedKnifes.push(index);\n                this.pageViewIndexs.push(pageViewIndex);\n            }\n\n            pageViewIndex++;\n            createPage(index);\n        }\n\n        for (let index = 1, count = 1; ConfigUtil.shared.hasKnife(ConfigUtil.shared.getKnifeId(index)) && count < ((COUNT_KNIFES_ONE_PAGE + 1) / 2); index++) {\n            if (ConfigUtil.shared.getKnifeObtainMethod(ConfigUtil.shared.getKnifeId(index)) == KnifeObtainMethod.DEFEAT_BOSS) {\n                continue;\n            }\n\n            createPage(index);\n            count++;\n        }\n\n        this.randomNumber = Math.floor(Math.random() * this.notGainedKnifes.length);\n\n        this.selectPage = this.pageView.getPages()[(COUNT_KNIFES_ONE_PAGE - 1) / 2];\n    }\n\n    start() {\n    }\n\n    update(dt) {\n        if (!this.hasStartedScroll) {\n            let resetToFirstKnife = cc.callFunc(function () {\n                this.pageView.scrollToLeft(0);\n            }, this);\n\n            let callBack = cc.callFunc(function () {\n                this.lotteryCallback();\n            }, this);\n\n            let seq = cc.sequence(\n                cc.repeat(\n                    cc.sequence(\n                        cc.moveBy(((this.pageView.getPages().length - COUNT_KNIFES_ONE_PAGE) * 0.1), this.pageView.getPages()[0].position.x - this.pageView.getPages()[this.pageView.getPages().length - COUNT_KNIFES_ONE_PAGE].position.x, 0),\n                        resetToFirstKnife\n                    ), 1),\n\n                cc.moveBy(this.pageViewIndexs[this.randomNumber] * 0.1, this.pageView.getPages()[0].position.x\n                    - this.pageView.getPages()[this.pageViewIndexs[this.randomNumber]].position.x, 0),\n                callBack\n            );\n            this.pageView.content.runAction(seq);\n\n            this.hasStartedScroll = true;\n        }\n\n        let halfSelectionWidth = (this.pageView.node.getChildByName(\"view\").getChildByName(\"content\")\n            .getComponent(cc.Layout).spacingX + this.pageView.getPages()[0].width) / 2;\n\n        this.pageView.getPages().forEach(page => {\n            if (Math.abs(page.position.x + this.pageView.content.position.x) < halfSelectionWidth) {\n                this.selectPage.setScale(1);\n                this.selectPage = page;\n                this.selectPage.setScale(2);\n                return;\n            }\n        });\n    }\n\n    public getKnifeIndex(): number {\n        return this.notGainedKnifes[this.randomNumber];\n    }\n\n    public init(lotteryCallback: () => void): void {\n        this.lotteryCallback = lotteryCallback;\n    }\n}\n"]}